name: Release for production

on:
  push:
    tags:
      v1.0.0-dev.*

jobs:
  # publish-py:
    # uses: ./.github/workflows/publish-py.yml
    
  # publish-cargo:
    # uses: ./.github/workflows/publish-cargo.yml


  build-node:
    uses: ./.github/workflows/build-node.yml
  
  # publish-node:
  #   name: Create NPM package
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #
  #   needs:
  #     - build-node
  #
  #   environment:
  #     name: release
  #   
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 'lts/*'
  #         # cache: 'npm'
  #         registry-url: 'https://registry.npmjs.org'
  #
  #     - name: Build node package
  #       run: |
  #         npm install --global typescript
  #         python scripts/package-scripts/node.py ${{ github.ref_name }}
  #
  #
  #     - name: Publish to NPM
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: |
  #         cd node-dist
  #         npm publish --access public

  package-cli:
    name: Package CLI binaries
    if: startsWith(github.ref, 'refs/tags/')

    strategy:
      matrix:
        os: [macos-latest]
        # os: [macos-latest, windows-latest, ubuntu-latest]
        
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build and package binaries
        run: |
          python scripts/build-scripts/cli.py ${{ github.ref_name }}

      - name: Store Node binary
        uses: actions/upload-artifact@v4
        with:
          name: cli-bin-${{ matrix.os }}
          path: ./dist/

  
  publish-github-release:
    needs: 
      - build-node
      - package-cli
    uses: ./.github/workflows/publish-github-release.yml

