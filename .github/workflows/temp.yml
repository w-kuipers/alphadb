name: Build Python Wheels

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install Rust toolchain
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Install Maturin
      - name: Install Maturin
        run: pip install maturin

      # Build and test the wheels
      - name: Build wheels
        run: maturin build --release --manylinux off

      # Audit and repair wheels (Linux only)
      - name: Audit Linux wheels
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install auditwheel
          for whl in ./target/wheels/*.whl; do
            auditwheel repair "$whl" -w ./target/wheels/
          done

      # Upload wheels as artifacts
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: python-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./target/wheels/

