name: Build Python package

on:
  workflow_call:

jobs:
  # build:
  #   name: Build Python API
  #   if: startsWith(github.ref, 'refs/tags/')
  #   strategy:
  #     matrix:
  #       os: [macos-latest, windows-latest]
  #       # os: [macos-latest, windows-latest, ubuntu-latest]
  #       
  #   runs-on: ${{ matrix.os }}
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.12"
  #
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #     
  #     - name: Setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         registry-url: https://registry.npmjs.org
  #
  #     - name: Install Deps
  #       # run: cargo install cross
  #       run: |
  #         npm install --global typescript
  #         npm install --global yarn
  #
  #     - name: Build node package
  #       run: |
  #         python scripts/build-scripts/node.py ${{ github.ref_name }}
  #
  #     - name: Store Node binary
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: node-bin
  #         path: ./node-bin/

  publish:
    name: Create NPM package
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Build node package
        run: |
          npm install --global typescript
          python scripts/package-scripts/node.py ${{ github.ref_name }}


      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          cd node-dist
          npm publish --access public
